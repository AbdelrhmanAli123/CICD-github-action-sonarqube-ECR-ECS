name: CI/CD Pipeline
env:
  AWS_REGION: us-east-1
on: workflow_dispatch
jobs:
  TEST-CQ-steps:
    runs-on: ubuntu-latest
    steps:
        - name: for Testing
          uses: actions/checkout@v4

        - name: Maven test 
          run:  mvn test install
        
        - name: Checkstyle
          run: mvn checkstyle:checkstyle

        - name: Set Java 11
          uses: actions/setup-java@v3
          with:
            distribution: 'temurin' 
            java-version: '11'
   

      # Setup sonar-scanner
        - name: Setup SonarQube
          uses: warchant/setup-sonar-scanner@v7
    
      # Run sonar-scanner
        - name: SonarQube Scan
          run: sonar-scanner
            -Dsonar.host.url=${{ secrets.SONAR_URL }}
            -Dsonar.login=${{ secrets.SONAR_TOKEN}}
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.sources=src/
            -Dsonar.junit.reportsPath=target/surefire-reports/ 
            -Dsonar.jacoco.reportsPath=target/jacoco.exec 
            -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml
            -Dsonar.java.binaries=target/test-classes/com/visualpathit/account/controllerTest/
          
        - name: SonarQube Quality Gate check
          id: sonarqube-quality-gate-check
          uses: sonarsource/sonarqube-quality-gate-action@master
          # Force to fail step after specific time.
          timeout-minutes: 5
          env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            SONAR_HOST_URL: ${{ secrets.SONAR_URL }} 
        
  BUILD_AND_PUBLISH:
    needs: TEST-CQ-steps
    runs-on: ubuntu-latest
    steps:
        - name: Code checkout
          uses: actions/checkout@v4

        # - name: Update application.properties file
        #   run: |
        #     sed -i "s/^jdbc.username.*$/jdbc.username\=${{ secrets.AWS_RDS_USER }}/" src/main/resources/application.properties
        #     sed -i "s/^jdbc.password.*$/jdbc.password\=${{ secrets.AWS_RDS_PASS }}/" src/main/resources/application.properties
        #     sed -i "s/db01/${{ secrets.AWS_RDS_ENDPOINT }}/" src/main/resources/application.properties


        - name: Build & Upload image to ECR
          uses: appleboy/docker-ecr-action@master
          with:
            access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
            secret_key: ${{ secrets.AWS_SECRET_KEY_ID }}
            registry: ${{ secrets.AWS_ECR_ID }}
            repo: actions_repo
            region: ${{ env.AWS_REGION }}
            tags: latest,${{ github.run_number }}
            daemon_off: false
            dockerfile: ./Dockerfile
            context: ./